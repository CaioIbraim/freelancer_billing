<?php
// +----------------------------------------------------------------------+
// | BoletoPhp - VersÃ£o Beta                                              |
// +----------------------------------------------------------------------+
// | Este arquivo estÃ¡ disponÃ­vel sob a LicenÃ§a GPL disponÃ­vel pela Web   |
// | em http://pt.wikipedia.org/wiki/GNU_General_Public_License           |
// | VocÃª deve ter recebido uma cÃ³pia da GNU Public License junto com     |
// | esse pacote; se nÃ£o, escreva para:                                   |
// |                                                                      |
// | Free Software Foundation, Inc.                                       |
// | 59 Temple Place - Suite 330                                          |
// | Boston, MA 02111-1307, USA.                                          |
// +----------------------------------------------------------------------+

// +----------------------------------------------------------------------+
// | Originado do Projeto BBBoletoFree que tiveram colaboraÃ§Ãµes de Daniel |
// | William Schultz e Leandro Maniezo que por sua vez foi derivado do	  |
// | PHPBoleto de JoÃ£o Prado Maia e Pablo Martins F. Costa                |
// | 																	                                    |
// | Se vc quer colaborar, nos ajude a desenvolver p/ os demais bancos :-)|
// | Acesse o site do Projeto BoletoPhp: www.boletophp.com.br             |
// +----------------------------------------------------------------------+

// +----------------------------------------------------------------------------+
// | Equipe CoordenaÃ§Ã£o Projeto BoletoPhp: <boletophp@boletophp.com.br>         |
// | Desenvolvimento Boleto Santander-Banespa : Fabio R. Lenharo		            |
// +----------------------------------------------------------------------------+

class funcoes_santander_banespa {
	
	protected $codigobanco = "033"; //Antigamente era 353
	protected $codigo_banco_com_dv = '';
	protected $nummoeda = "9";
	protected $fixo     = "9";   // Numero fixo para a posiÃ§Ã£o 05-05
	protected $ios	  = "0";   // IOS - somente para Seguradoras (Se 7% informar 7, limitado 9%)
	// Demais clientes usar 0 (zero)
	protected $fator_vencimento = '';
	
	//valor tem 10 digitos, sem virgula
	protected $valor = '';
	//Modalidade Carteira
	protected $carteira = '';
	//codigocedente deve possuir 7 caracteres
	protected $codigocliente = '';
	
	//nosso nÃºmero (sem dv) Ã© 11 digitos
	protected $nnum = '';
	//dv do nosso nÃºmero
	protected $dv_nosso_numero = '';
	// nosso nÃºmero (com dvs) sÃ£o 13 digitos
	protected $nossonumero = "";
	
	protected $vencimento = "";
	
	protected $vencjuliano = "";
	
	// 43 numeros para o calculo do digito verificador do codigo de barras
	protected $barra = "";
	
	//$barra = "$codigobanco$nummoeda$fixo$codigocliente$nossonumero$ios$carteira";
	protected $dv = "";
	// Numero para o codigo de barras com 44 digitos
	protected $linha = "";
	
	function __construct(&$dadosboleto)
	{
		$this->codigo_banco_com_dv = $this->geraCodigoBanco($this->codigobanco);
		$this->fator_vencimento = $this->fator_vencimento($dadosboleto["data_vencimento"]);
		$this->valor = $this->formata_numero($dadosboleto["valor_boleto"],10,0,"valor");
		$this->carteira = $dadosboleto["carteira"];
		$this->codigocliente = $this->formata_numero($dadosboleto["codigo_cliente"],7,0);
		$this->nnum = $this->formata_numero($dadosboleto["nosso_numero"],7,0);
		$this->dv_nosso_numero = $this->modulo_11($this->nnum,9,0);
		$this->nossonumero = "00000".$this->nnum.$this->dv_nosso_numero;
		$this->vencimento = $dadosboleto["data_vencimento"];
		$this->vencjuliano = $this->dataJuliano($this->vencimento);
		$this->barra = "$this->codigobanco$this->nummoeda$this->fator_vencimento$this->valor$this->fixo$this->codigocliente$this->nossonumero$this->ios$this->carteira";
		$this->dv = $this->digitoVerificador_barra($this->barra);
		$this->linha = substr($this->barra,0,4) . $this->dv . substr($this->barra,4);
		$dadosboleto["codigo_barras"] = $this->linha;
		$dadosboleto["linha_digitavel"] = $this->monta_linha_digitavel($this->linha);
		$dadosboleto["nosso_numero"] = $this->nossonumero;
		$dadosboleto["codigo_banco_com_dv"] = $this->codigo_banco_com_dv;
	}
	
	function getImage($image=false, $base=false, $url=false){
	
		if($url){
			return $url;
		}
	
		if(!$image OR $base){
			$image = "base64";
			$base64 = $base;
		}
	
		$logo_empresa = "";
	
		$logo_bb = "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";
		
		$logosantander = "";
		
		$p = "iVBORw0KGgoAAAANSUhEUgAAAAoAAABQAQMAAAAa6XZvAAAAA1BMVEUAAACnej3aAAAADElEQVR42mNgGFkAAADwAAE4aVpRAAAAAElFTkSuQmCC";
		
		$b = "iVBORw0KGgoAAAANSUhEUgAAAAoAAABQAQMAAAAa6XZvAAAAA1BMVEX///+nxBvIAAAADElEQVR42mNgGFkAAADwAAE4aVpRAAAAAElFTkSuQmCC";
		
		$n6 = "iVBORw0KGgoAAAANSUhEUgAAApkAAAACAQAAAAA76vpWAAAAGUlEQVR42mNgbDiQYCDBw8ZMPUYDAy0MBQCvGyXfT4/GUQAAAABJRU5ErkJggg==";
		
		$n3 = "iVBORw0KGgoAAAANSUhEUgAAAAIAAAATAQMAAACA8k5ZAAAAA1BMVEUAAACnej3aAAAADElEQVR42mNgIAYAAAAmAAEy2MJFAAAAAElFTkSuQmCC";
		
		$n2 = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABAQMAAAAl21bKAAAAA1BMVEUAAACnej3aAAAACklEQVR42mNgAAAAAgAB5Sfe/AAAAABJRU5ErkJggg==";
		
		$n1 = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAATAQMAAABrxfVaAAAAA1BMVEUAAACnej3aAAAADElEQVR42mNgIAYAAAAmAAEy2MJFAAAAAElFTkSuQmCC";
		
		return "data:image/png;base64,".$$image;
		
	}
	
	function dataJuliano($data) 
	{
		$dia = (int)substr($data,1,2);
		$mes = (int)substr($data,3,2);
		$ano = (int)substr($data,6,4);
		$dataf = strtotime("$ano/$mes/$dia");
		$datai = strtotime(($ano-1).'/12/31');
		$dias  = (int)(($dataf - $datai)/(60*60*24));
	  return str_pad($dias,3,'0',STR_PAD_LEFT).substr($data,9,4);
	}
	
	function digitoVerificador_nossonumero($numero) {
		$resto2 = $this->modulo_11($numero, 9, 1);
	     $digito = 11 - $resto2;
	     if ($digito == 10 || $digito == 11) {
	        $dv = 0;
	     } else {
	        $dv = $digito;
	     }
		 return $dv;
	}
	
	
	function digitoVerificador_barra($numero) {
		$resto2 = $this->modulo_11($numero, 9, 1);
	     if ($resto2 == 0 || $resto2 == 1 || $resto2 == 10) {
	        $dv = 1;
	     } else {
		 	$dv = 11 - $resto2;
	     }
		 return $dv;
	}	
	
	// FUNÃ‡Ã•ES
	// Algumas foram retiradas do Projeto PhpBoleto e modificadas para atender as particularidades de cada banco
	
	function formata_numero($numero,$loop,$insert,$tipo = "geral") {
		if ($tipo == "geral") {
			$numero = str_replace(",","",$numero);
			while(strlen($numero)<$loop){
				$numero = $insert . $numero;
			}
		}
		if ($tipo == "valor") {
			/*
			retira as virgulas
			formata o numero
			preenche com zeros
			*/
			$numero = str_replace(",","",$numero);
			while(strlen($numero)<$loop){
				$numero = $insert . $numero;
			}
		}
		if ($tipo == "convenio") {
			while(strlen($numero)<$loop){
				$numero = $numero . $insert;
			}
		}
		return $numero;
	}
	
	
	function fbarcode($valor){
	
	$fino = 1 ;
	$largo = 3 ;
	$altura = 50 ;
	
	  $barcodes[0] = "00110" ;
	  $barcodes[1] = "10001" ;
	  $barcodes[2] = "01001" ;
	  $barcodes[3] = "11000" ;
	  $barcodes[4] = "00101" ;
	  $barcodes[5] = "10100" ;
	  $barcodes[6] = "01100" ;
	  $barcodes[7] = "00011" ;
	  $barcodes[8] = "10010" ;
	  $barcodes[9] = "01010" ;
	  for($f1=9;$f1>=0;$f1--){ 
	    for($f2=9;$f2>=0;$f2--){  
	      $f = ($f1 * 10) + $f2 ;
	      $texto = "" ;
	      for($i=1;$i<6;$i++){ 
	        $texto .=  substr($barcodes[$f1],($i-1),1) . substr($barcodes[$f2],($i-1),1);
	      }
	      $barcodes[$f] = $texto;
	    }
	  }
	
	
	//Desenho da barra
	
	//Guarda inicial
	?><img src="<?=$this->getImage("p")?>" width=<?php echo $fino?> height=<?php echo $altura?> border=0><img 
	src="<?=$this->getImage("b")?>" width=<?php echo $fino?> height=<?php echo $altura?> border=0><img 
	src="<?=$this->getImage("p")?>" width=<?php echo $fino?> height=<?php echo $altura?> border=0><img 
	src="<?=$this->getImage("b")?>" width=<?php echo $fino?> height=<?php echo $altura?> border=0><img 
	<?php
	$texto = $valor ;
	if((strlen($texto) % 2) <> 0){
		$texto = "0" . $texto;
	}
	
	// Draw dos dados
	while (strlen($texto) > 0) {
	  $i = round($this->esquerda($texto,2));
	  $texto = $this->direita($texto,strlen($texto)-2);
	  $f = $barcodes[$i];
	  for($i=1;$i<11;$i+=2){
	    if (substr($f,($i-1),1) == "0") {
	      $f1 = $fino ;
	    }else{
	      $f1 = $largo ;
	    }
	?>
	    src="<?=$this->getImage("p")?>" width=<?php echo $f1?> height=<?php echo $altura?> border=0><img 
	<?php
	    if (substr($f,$i,1) == "0") {
	      $f2 = $fino ;
	    }else{
	      $f2 = $largo ;
	    }
	?>
	    src="<?=$this->getImage("b")?>" width=<?php echo $f2?> height=<?php echo $altura?> border=0><img 
	<?php
	  }
	}
	
	// Draw guarda final
	?>
	src="<?=$this->getImage("p")?>" width=<?php echo $largo?> height=<?php echo $altura?> border=0><img 
	src="<?=$this->getImage("b")?>" width=<?php echo $fino?> height=<?php echo $altura?> border=0><img 
	src="<?=$this->getImage("p")?>" width=<?php echo 1?> height=<?php echo $altura?> border=0> 
	  <?php
	} //Fim da funÃ§Ã£o
	
	function esquerda($entra,$comp){
		return substr($entra,0,$comp);
	}
	
	function direita($entra,$comp){
		return substr($entra,strlen($entra)-$comp,$comp);
	}
	
	function fator_vencimento($data) {
		$data = explode("/",$data);
		$ano = $data[2];
		$mes = $data[1];
		$dia = $data[0];
	    return(abs(($this->_dateToDays("1997","10","07")) - ($this->_dateToDays($ano, $mes, $dia))));
	}
	
	function _dateToDays($year,$month,$day) {
	    $century = substr($year, 0, 2);
	    $year = substr($year, 2, 2);
	    if ($month > 2) {
	        $month -= 3;
	    } else {
	        $month += 9;
	        if ($year) {
	            $year--;
	        } else {
	            $year = 99;
	            $century --;
	        }
	    }
	    return ( floor((  146097 * $century)    /  4 ) +
	            floor(( 1461 * $year)        /  4 ) +
	            floor(( 153 * $month +  2) /  5 ) +
	                $day +  1721119);
	}
	
	function modulo_10($num) { 
			$numtotal10 = 0;
	        $fator = 2;
	
	        // Separacao dos numeros
	        for ($i = strlen($num); $i > 0; $i--) {
	            // pega cada numero isoladamente
	            $numeros[$i] = substr($num,$i-1,1);
	            // Efetua multiplicacao do numero pelo (falor 10)
	            // 2002-07-07 01:33:34 Macete para adequar ao Mod10 do Itaú
	            $temp = $numeros[$i] * $fator; 
	            $temp0=0;
	            foreach (preg_split('//',$temp,-1,PREG_SPLIT_NO_EMPTY) as $k=>$v){ $temp0+=$v; }
	            $parcial10[$i] = $temp0; //$numeros[$i] * $fator;
	            // monta sequencia para soma dos digitos no (modulo 10)
	            $numtotal10 += $parcial10[$i];
	            if ($fator == 2) {
	                $fator = 1;
	            } else {
	                $fator = 2; // intercala fator de multiplicacao (modulo 10)
	            }
	        }
			
	        // várias linhas removidas, vide função original
	        // Calculo do modulo 10
	        $resto = $numtotal10 % 10;
	        $digito = 10 - $resto;
	        if ($resto == 0) {
	            $digito = 0;
	        }
			
	        return $digito;
			
	}
	
	function modulo_11($num, $base=9, $r=0)  {
	    /**
	     *   Autor:
	     *           Pablo Costa <pablo@users.sourceforge.net>
	     *
	     *   Função:
	     *    Calculo do Modulo 11 para geracao do digito verificador 
	     *    de boletos bancarios conforme documentos obtidos 
	     *    da Febraban - www.febraban.org.br 
	     *
	     *   Entrada:
	     *     $num: string numérica para a qual se deseja calcularo digito verificador;
	     *     $base: valor maximo de multiplicacao [2-$base]
	     *     $r: quando especificado um devolve somente o resto
	     *
	     *   SaÃ­da:
	     *     Retorna o Digito verificador.
	     *
	     *   Observações:
	     *     - Script desenvolvido sem nenhum reaproveitamento de código pré existente.
	     *     - Assume-se que a verificação do formato das variáveis de entrada é feita antes da execuÃ§Ã£o deste script.
	     */                                        
	
	    $soma = 0;
	    $fator = 2;
	
	    /* Separacao dos numeros */
	    for ($i = strlen($num); $i > 0; $i--) {
	        // pega cada numero isoladamente
	        $numeros[$i] = substr($num,$i-1,1);
	        // Efetua multiplicacao do numero pelo falor
	        $parcial[$i] = $numeros[$i] * $fator;
	        // Soma dos digitos
	        $soma += $parcial[$i];
	        if ($fator == $base) {
	            // restaura fator de multiplicacao para 2 
	            $fator = 1;
	        }
	        $fator++;
	    }
	
	    /* Calculo do modulo 11 */
	    if ($r == 0) {
	        $soma *= 10;
	        $digito = $soma % 11;
	        if ($digito == 10) {
	            $digito = 0;
	        }
	        return $digito;
	    } elseif ($r == 1){
	        $resto = $soma % 11;
	        return $resto;
	    }
	}
	
	function modulo_11_invertido($num)  // Calculo de Modulo 11 "Invertido" (com pesos de 9 a 2  e nÃ£o de 2 a 9)
	{ 
	   $ftini = 2;
	   $fator = $ftfim = 9;
	   $soma = 0;
		
	   for ($i = strlen($num); $i > 0; $i--) 
	   {
	      $soma += substr($num,$i-1,1) * $fator;
		  if(--$fator < $ftini) 
		     $fator = $ftfim;
	    }
		
	    $digito = $soma % 11;
		
		if($digito > 9) 
		   $digito = 0;
		
		return $digito;
	}
	
	function monta_linha_digitavel($linha) 
	{ 
		// PosiÃ§Ã£o 	ConteÃºdo
		// 1 a 3    NÃºmero do banco
		// 4        CÃ³digo da Moeda - 9 para Real ou 8 - outras moedas
		// 5        Fixo "9'
		// 6 a 9    PSK - codigo cliente (4 primeiros digitos)
		// 10 a 12  Restante do PSK (3 digitos)
		// 13 a 19  7 primeiros digitos do Nosso Numero
		// 20 a 25  Restante do Nosso numero (8 digitos) - total 13 (incluindo digito verificador)
		// 26 a 26  IOS
		// 27 a 29  Tipo Modalidade Carteira
		// 30 a 30  DÃ­gito verificador do cÃ³digo de barras
		// 31 a 34  Fator de vencimento (qtdade de dias desde 07/10/1997 atÃ© a data de vencimento)
		// 35 a 44  Valor do tÃ­tulo
		
		// 1. Primeiro Grupo - composto pelo cÃ³digo do banco, cÃ³digo da moÃ©da, Valor Fixo "9"
		// e 4 primeiros digitos do PSK (codigo do cliente) e DV (modulo10) deste campo
		$p1 = substr($linha,0,3) . substr($linha,3,1) . substr($linha,19,1) . substr($linha,20,4);
		$p1 = $p1 . $this->modulo_10($p1);
	  	$p1 = substr($p1, 0, 5).'.'.substr($p1, 5);
	
	
		
		// 2. Segundo Grupo - composto pelas 3 Ãºltimas posiÃ§oes do PSK e 7 primeiros dÃ­gitos do Nosso NÃºmero
		// e DV (modulo10) deste campo
		$p2 = substr($linha,24,10);
		$p2 = $p2 . $this->modulo_10($p2);
	  	$p2 = substr($p2, 0, 5).'.'.substr($p2, 5);
	
	
		// 3. Terceiro Grupo - Composto por : Restante do Nosso Numero (6 digitos), IOS, Modalidade da Carteira
		// e DV (modulo10) deste campo
		$p3 = substr($linha,34,10);
		$p3 = $p3 . $this->modulo_10($p3);
	  	$p3 = substr($p3, 0, 5).'.'.substr($p3, 5);
	
	
	
		// 4. Campo - digito verificador do codigo de barras
		$p4 = substr($linha, 4, 1);
	
	
		
		// 5. Campo composto pelo fator vencimento e valor nominal do documento, sem
		// indicacao de zeros a esquerda e sem edicao (sem ponto e virgula). Quando se
		// tratar de valor zerado, a representacao deve ser 0000000000 (dez zeros).
		$p5 = substr($linha, 5, 4) . substr($linha, 9, 10);
		
		return "$p1 $p2 $p3 $p4 $p5"; 
	}
	
	function geraCodigoBanco($numero) {
	    $parte1 = substr($numero, 0, 3);
	    $parte2 = $this->modulo_11($parte1);
	    return $parte1 . "-" . $parte2;
	}
}